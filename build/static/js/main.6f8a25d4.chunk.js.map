{"version":3,"sources":["components/NavbarComponent.js","components/JumbotronComponent.js","actions/userAction.js","components/TableComponent.js","containers/HomeContainer.js","components/BackComponent.js","validations/UserValidation.js","components/FormComponent.js","containers/CreateUserContainer.js","containers/EditUserContainer.js","components/DetailUserComponent.js","containers/DetailUserContainer.js","App.js","serviceWorker.js","reducers/users.js","reducers/index.js","index.js"],"names":["NavbarComponent","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","Container","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","NavbarText","connect","state","title","users","Jumbotron","Button","icon","faInfo","getUserDetail","id","dispatch","axios","get","then","response","type","payload","data","errorMessage","catch","error","message","SearchBar","Search","handleClick","swal","buttons","dangerMode","willDelete","delete","console","log","deleteUser","defaultSorted","dataField","order","getUsersList","errorUsersList","columns","text","sort","headerStyle","width","formatter","rowContent","row","to","faEdit","faTrash","bootstrap4","keyField","search","Row","Col","faUserPlus","searchProps","placeholder","baseProps","pagination","paginationFactory","Spinner","HomeContainer","this","Component","BackComponent","faArrowLeft","UserValidation","values","errors","nama","umur","alamat","nohp","renderField","input","label","disabled","readOnly","meta","touched","warning","md","Label","htmlFor","Input","style","FormComponent","onSubmit","handleSubmit","FormGroup","Field","name","component","submitting","reduxForm","form","validate","enableReinitialize","initialValues","CreateUserContainer","post","postUserCreate","getResponDataUser","errorResponDataUser","EditUserContainer","match","params","put","putUserUpdate","errorUserDetail","Table","striped","DetailUserContainer","App","path","exact","Boolean","window","location","hostname","initialState","action","combineReducers","formReducer","store","createStore","reducer","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f8a25d4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n  Container,\n} from 'reactstrap';\n\nconst NavbarComponent = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <Container>\n          <NavbarBrand href=\"/\">Hendradito</NavbarBrand>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/components/\">Home</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\">\n                  About Me\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <NavbarText>Admin</NavbarText>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavbarComponent;\n","import React from \"react\";\nimport { Jumbotron, Button, Container } from \"reactstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfo } from '@fortawesome/free-solid-svg-icons'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = (state) => {\n  return {\n    title: state.users.title\n  }\n}\n\nconst JumbotronComponent = (props) => {\n  return (\n    <div>\n      <Jumbotron>\n        <Container>\n          <h1 className=\"display-3\">{props.title}</h1>\n          <p className=\"lead\">\n            This is a simple hero unit, a simple Jumbotron-style component for\n            calling extra attention to featured content or information.\n          </p>\n          <hr className=\"my-2\" />\n          <p>\n            It uses utility classes for typography and spacing to space content\n            out within the larger container.\n          </p>\n          <p className=\"lead\">\n            <Button color=\"dark\"><FontAwesomeIcon icon={faInfo} /> Learn More</Button>\n          </p>\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, null)(JumbotronComponent);\n","import axios from \"axios\";\n\nexport const GET_USERS_LIST = \"GET_USERS_LIST\";\nexport const GET_USER_DETAIL = \"GET_USER_DETAIL\";\nexport const POST_USER_CREATE = \"POST_USER_CREATE\";\nexport const PUT_USER_EDIT = \"PUT_USER_EDIT\";\n\n\n\nexport const getUsersList = () => {\n  return (dispatch) => {\n    axios\n      .get(\"https://my-json-server.typicode.com/afifbasya/reactjs-redux/users\")\n      .then(function (response) {\n        dispatch({\n          type: GET_USERS_LIST,\n          payload: {\n            data: response.data,\n            errorMessage: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: GET_USERS_LIST,\n          payload: {\n            data: false,\n            errorMessage: error.message,\n          },\n        });\n      });\n  };\n};\n\nexport const getUserDetail = (id) => {\n  return (dispatch) => {\n    axios\n      .get(\n        \"https://my-json-server.typicode.com/afifbasya/reactjs-redux/users/\" +\n          id\n      )\n      .then(function (response) {\n        dispatch({\n          type: GET_USER_DETAIL,\n          payload: {\n            data: response.data,\n            errorMessage: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: GET_USER_DETAIL,\n          payload: {\n            data: false,\n            errorMessage: error.message,\n          },\n        });\n      });\n  };\n};\n\nexport const postUserCreate = (data) => {\n  return (dispatch) => {\n    axios\n      .post(\n         \"http://my-json-server.typicode.com/afifbasya/reactjs-redux/users\",\n        data\n      )\n      .then(function (response) {\n        console.log(response);\n        \n        dispatch({\n          type: POST_USER_CREATE,\n          payload: {\n            data: response.data,\n            errorMessage: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: POST_USER_CREATE,\n          payload: {\n            data: false,\n            errorMessage: error.message,\n          },\n        });\n      });\n  };\n};\n\nexport const putUserUpdate = (data, id) => {\n  return (dispatch) => {\n    axios\n      .put(\n         \"http://my-json-server.typicode.com/afifbasya/reactjs-redux/users/\"+id,\n        data\n      )\n      .then(function (response) {\n        console.log(response);\n        \n        dispatch({\n          type: PUT_USER_EDIT,\n          payload: {\n            data: response.data,\n            errorMessage: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: PUT_USER_EDIT,\n          payload: {\n            data: false,\n            errorMessage: error.message,\n          },\n        });\n      });\n  };\n};\n\n\nexport const deleteUser = (id) => {\n  return (dispatch) => {\n    axios\n      .delete(\n         \"http://my-json-server.typicode.com/afifbasya/reactjs-redux/users/\"+id\n      )\n      .then(function (response) {\n        console.log(response);\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n        \n      });\n  };\n};\n\n\nexport const deleteDataUser = () => {\n  return (dispatch) => {\n    dispatch({\n      type: GET_USER_DETAIL,\n      payload: {\n        data: false,\n        errorMessage: false,\n      },\n    });\n\n\n    dispatch({\n      type: POST_USER_CREATE,\n      payload: {\n        data: false,\n        errorMessage: false,\n      },\n    });\n  };\n};\n","import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faInfo,\n  faEdit,\n  faTrash,\n  faUserPlus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport swal from 'sweetalert';\nimport { deleteUser } from \"../actions/userAction\";\n\nconst { SearchBar } = Search;\n\nconst handleClick = (dispatch, id) => {\n  \n  swal({\n    title: \"Apakah Anda yakin akan menghapus data ini ?\",\n    icon: \"warning\",\n    buttons: true,\n    dangerMode: true,\n  })\n  .then((willDelete) => {\n    if (willDelete) {\n      dispatch(deleteUser(id))\n      swal(\"Data User Sukses dihapus\", {\n        icon: \"success\",\n      });\n    } else {\n      swal(\"Data gagal dihapus\");\n    }\n  });\n}\n\n\nconst defaultSorted = [\n  {\n    dataField: \"id\",\n    order: \"asc\",\n  },\n];\n\nconst mapStateToProps = (state) => {\n  return {\n    getUsersList: state.users.getUsersList,\n    errorUsersList: state.users.errorUsersList,\n  };\n};\n\nconst TableComponent = (props) => {\n\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"ID\",\n      sort: true,\n      headerStyle: () => {\n        return { width: \"5%\" };\n      },\n    },\n    {\n      dataField: \"nama\",\n      text: \"Nama\",\n      sort: true,\n    },\n    {\n      dataField: \"alamat\",\n      text: \"Alamat\",\n      sort: true,\n    },\n    {\n      dataField: \"link\",\n      text: \"Action\",\n      formatter: (rowContent, row) => {\n        return (\n          <div>\n            <Link to={\"detail/\" + row.id}>\n              <Button color=\"dark\" className=\"mr-2\">\n                <FontAwesomeIcon icon={faInfo} /> Detail\n              </Button>\n            </Link>\n  \n            <Link to={\"edit/\" + row.id}>\n              <Button color=\"dark\" className=\"mr-2\">\n                <FontAwesomeIcon icon={faEdit} /> Edit\n              </Button>\n            </Link>\n  \n            <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(props.dispatch, row.id)}>\n              <FontAwesomeIcon icon={faTrash} /> Delete\n            </Button>\n          </div>\n        );\n      },\n    },\n  ];\n\n  \n  return (\n    <Container>\n      {props.getUsersList ? (\n        <ToolkitProvider\n          bootstrap4\n          keyField=\"id\"\n          data={props.getUsersList}\n          columns={columns}\n          defaultSorted={defaultSorted}\n          search\n        >\n          {(props) => (\n            <div>\n              <Row>\n                <Col>\n                  <Link to=\"/create\">\n                    <Button color=\"dark\" className=\"mr-2\">\n                      <FontAwesomeIcon icon={faUserPlus} /> Create User\n                    </Button>\n                  </Link>\n                </Col>\n                <Col>\n                  <div className=\"float-right\">\n                    <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\n                  </div>\n                </Col>\n              </Row>\n\n              <BootstrapTable\n                {...props.baseProps}\n                pagination={paginationFactory()}\n              />\n            </div>\n          )}\n        </ToolkitProvider>\n      ) : (\n        <div className=\"text-center\">\n          {props.errorUsersList ? (\n            <h4>{props.errorUsersList}</h4>\n          ) : (\n            <Spinner color=\"dark\" />\n          )}\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default connect(mapStateToProps, null)(TableComponent);\n","import React, { Component } from \"react\";\nimport TableComponent from \"../components/TableComponent\";\nimport { connect } from \"react-redux\";\nimport { getUsersList, deleteDataUser } from '../actions/userAction'\n\nclass HomeContainer extends Component {\n  componentDidMount() {\n    this.props.dispatch(getUsersList());\n    this.props.dispatch(deleteDataUser());\n  }\n\n  render() {\n    \n    return (\n      <div>\n        <TableComponent />\n      </div>\n    );\n  }\n}\n\nexport default connect()(HomeContainer);\n","import React from \"react\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst BackComponent = () => {\n  return (\n    <Row className=\"mb-2\">\n      <Col>\n        <Link to=\"/\">\n          <Button color=\"dark\">\n            <FontAwesomeIcon icon={faArrowLeft} /> Back\n          </Button>\n        </Link>\n      </Col>\n    </Row>\n  );\n};\n\nexport default BackComponent;\n","const UserValidation = (values) => {\n  const errors = {};\n\n  if (!values.nama || values.nama === \"\") {\n    errors.nama = \"Nama harus diisi\";\n  }\n\n  if (!values.umur || values.umur === \"\") {\n    errors.umur = \"Umur harus diisi\";\n  }\n\n  if (!values.alamat || values.alamat === \"\") {\n    errors.alamat = \"Alamat harus diisi\";\n  }\n\n  if (!values.nohp || values.nohp === \"\") {\n    errors.nohp = \"No HP harus diisi\";\n  }\n\n  return errors\n};\n\nexport default UserValidation;\n","import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\nimport UserValidation from \"../validations/UserValidation\";\n\nconst renderField = ({\n  input,\n  type,\n  placeholder,\n  label,\n  disabled,\n  readOnly,\n  meta: { touched, error, warning },\n}) => (\n  <Row>\n    <Col md=\"12\">\n      <Label htmlFor=\"{input}\" className=\"col-form-label\">\n        {label}\n      </Label>\n    </Col>\n    <Col md=\"12\">\n      <Input\n        {...input}\n        type={type}\n        placeholder={placeholder}\n        disabled={disabled}\n        readOnly={readOnly}\n      ></Input>\n      {touched &&\n        ((error && <p style={{ color: \"red\" }}>{error}</p>) ||\n          (warning && <p style={{ color: \"brown\" }}>{warning}</p>))}\n    </Col>\n  </Row>\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    initialValues : {\n      nama : state.users.getUserDetail.nama,\n      nohp : state.users.getUserDetail.nohp,\n      alamat : state.users.getUserDetail.alamat,\n      umur : state.users.getUserDetail.umur,\n    }\n  };\n};\n\nclass FormComponent extends Component {\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit}>\n        <FormGroup row>\n          <Col md={6}>\n            <FormGroup>\n              <Field\n                type=\"text\"\n                name=\"nama\"\n                component={renderField}\n                label=\"Nama :\"\n              />\n            </FormGroup>\n          </Col>\n\n          <Col md={6}>\n            <FormGroup>\n              <Field\n                type=\"text\"\n                name=\"alamat\"\n                component={renderField}\n                label=\"Alamat :\"\n              />\n            </FormGroup>\n          </Col>\n\n          <Col md={6}>\n            <FormGroup>\n              <Field\n                type=\"text\"\n                name=\"nohp\"\n                component={renderField}\n                label=\"No HP :\"\n              />\n            </FormGroup>\n          </Col>\n\n          <Col md={6}>\n            <FormGroup>\n              <Field\n                type=\"text\"\n                name=\"umur\"\n                component={renderField}\n                label=\"Umur :\"\n              />\n            </FormGroup>\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Col md=\"12\">\n            <FormGroup>\n              <Button\n                color=\"dark\"\n                type=\"submit\"\n                disabled={this.props.submitting}\n              >\n                Submit\n              </Button>\n            </FormGroup>\n          </Col>\n        </FormGroup>\n      </form>\n    );\n  }\n}\n\nFormComponent = reduxForm({\n  form: \"formCreateUser\",\n  validate: UserValidation,\n  enableReinitialize: true,\n})(FormComponent);\nexport default connect(mapStateToProps, null)(FormComponent);\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport BackComponent from \"../components/BackComponent\";\nimport FormComponent from \"../components/FormComponent\";\nimport { connect } from \"react-redux\";\nimport { postUserCreate } from \"../actions/userAction\";\nimport swal from \"sweetalert\";\n\nconst mapStateToProps = (state) => {\n  return {\n    getResponDataUser: state.users.getResponDataUser,\n    errorResponDataUser: state.users.errorResponDataUser,\n  };\n};\n\nclass CreateUserContainer extends Component {\n  handleSubmit(data) {\n    this.props.dispatch(postUserCreate(data));\n  }\n\n  render() {\n    if (this.props.getResponDataUser || this.props.errorResponDataUser) {\n      if(this.props.errorResponDataUser)\n      {\n        swal(\n            \"Failed!\",\n            this.props.errorResponDataUser,\n            \"error\"\n          );\n      }else {\n        swal(\n            \"User Created!\",\n            \"Nama : \" +\n              this.props.getResponDataUser.nama +\n              \" , Umur : \" +\n              this.props.getResponDataUser.umur,\n            \"success\"\n          );\n      }\n    }\n    return (\n      <Container>\n        <BackComponent />\n        <h1>Create User</h1>\n        <FormComponent onSubmit={(data) => this.handleSubmit(data)} />\n      </Container>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, null)(CreateUserContainer);\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport BackComponent from \"../components/BackComponent\";\nimport { connect } from \"react-redux\";\nimport FormComponent from \"../components/FormComponent\";\nimport { getUserDetail, putUserUpdate } from \"../actions/userAction\";\nimport swal from \"sweetalert\";\n\nconst mapStateToProps = (state) => {\n  return {\n    getResponDataUser: state.users.getResponDataUser,\n    errorResponDataUser: state.users.errorResponDataUser,\n  };\n};\n\nclass EditUserContainer extends Component {\n  componentDidMount() {\n    this.props.dispatch(getUserDetail(this.props.match.params.id));\n  }\n\n  handleSubmit(data) {\n    this.props.dispatch(putUserUpdate(data, this.props.match.params.id));\n  }\n\n  render() {\n    if (this.props.getResponDataUser || this.props.errorResponDataUser) {\n      if (this.props.errorResponDataUser) {\n        swal(\"Failed!\", this.props.errorResponDataUser, \"error\");\n      } else {\n        swal(\n          \"User Updated!\",\n          \"Nama : \" +\n            this.props.getResponDataUser.nama +\n            \" , Umur : \" +\n            this.props.getResponDataUser.umur,\n          \"success\"\n        );\n      }\n    }\n    return (\n      <Container>\n        <BackComponent />\n        <h1>Edit User</h1>\n        <FormComponent onSubmit={(data) => this.handleSubmit(data)} />\n      </Container>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, null)(EditUserContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table } from \"reactstrap\";\n\nconst mapStateToProps = (state) => {\n  return {\n    getUserDetail: state.users.getUserDetail,\n    errorUserDetail: state.users.errorUserDetail,\n  };\n};\n\nconst DetailUserComponent = (props) => {\n  return (\n    <Table striped>\n      <tbody>\n        <tr>\n          <td width=\"200\">Nama</td>\n          <td width=\"10\">:</td>\n          <td>{props.getUserDetail.nama}</td>\n        </tr>\n        <tr>\n          <td width=\"200\">Alamat</td>\n          <td width=\"10\">:</td>\n          <td>{props.getUserDetail.alamat}</td>\n        </tr>\n        <tr>\n          <td width=\"200\">Umur</td>\n          <td width=\"10\">:</td>\n          <td>{props.getUserDetail.umur}</td>\n        </tr>\n        <tr>\n          <td width=\"200\">No HP</td>\n          <td width=\"10\">:</td>\n          <td>{props.getUserDetail.nohp}</td>\n        </tr>\n\n      </tbody>\n    </Table>\n  );\n};\n\nexport default connect(mapStateToProps, null)(DetailUserComponent);\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport BackComponent from \"../components/BackComponent\";\nimport { connect } from \"react-redux\";\nimport { getUserDetail } from \"../actions/userAction\";\nimport DetailUserComponent from \"../components/DetailUserComponent\";\n\nclass DetailUserContainer extends Component {\n  componentDidMount() {\n    this.props.dispatch(getUserDetail(this.props.match.params.id));\n  }\n\n  render() {\n    return (\n      <Container>\n        <BackComponent />\n        <h1>Detail User</h1>\n        <DetailUserComponent />\n      </Container>\n    );\n  }\n}\n\nexport default connect()(DetailUserContainer);\n","import React, { Component } from \"react\";\nimport NavbarComponent from \"./components/NavbarComponent\";\nimport JumbotronComponent from \"./components/JumbotronComponent\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport HomeContainer from \"./containers/HomeContainer\";\nimport CreateUserContainer from \"./containers/CreateUserContainer\";\nimport EditUserContainer from \"./containers/EditUserContainer\";\nimport DetailUserContainer from \"./containers/DetailUserContainer\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <NavbarComponent />\n        <JumbotronComponent />\n        <BrowserRouter>\n          <Route path=\"/\" exact component={HomeContainer} />\n\n          <Route path=\"/create\" exact component={CreateUserContainer} />\n\n          <Route path=\"/detail/:id\" exact component={DetailUserContainer} />\n\n          <Route path=\"/edit/:id\" exact component={EditUserContainer} />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  GET_USERS_LIST,\n  GET_USER_DETAIL,\n  POST_USER_CREATE,\n  PUT_USER_EDIT,\n} from '../actions/userAction';\n\nlet initialState = {\n  getUsersList: false,\n  errorUsersList: false,\n  getUserDetail: false,\n  errorUserDetail: false,\n  getResponDataUser: false,\n  errorResponDataUser: false,\n  title: 'Hendradito',\n};\n\nconst users = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USERS_LIST:\n      return {\n        ...state,\n        getUsersList: action.payload.data,\n        errorUsersList: action.payload.errorMessage,\n      };\n\n    case GET_USER_DETAIL:\n      return {\n        ...state,\n        getUserDetail: action.payload.data,\n        errorUserDetail: action.payload.errorMessage,\n      };\n\n    case POST_USER_CREATE:\n      return {\n        ...state,\n        getResponDataUser: action.payload.data,\n        errorResponDataUser: action.payload.errorMessage,\n      };\n\n    case PUT_USER_EDIT:\n      return {\n        ...state,\n        getResponDataUser: action.payload.data,\n        errorResponDataUser: action.payload.errorMessage,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default users;\n","import { combineReducers } from 'redux'\nimport users from './users'\nimport { reducer as formReducer } from 'redux-form'\n\nexport default combineReducers({\n    users,\n    form: formReducer\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducer, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}